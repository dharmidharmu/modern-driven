#Name of Workflow
name: ExportFromDevandPushToReop-V

#Trigger Flow Manually
on: 
  workflow_dispatch:
    inputs:
      # Change this value
      solution_version:
        description: 'name of the version to store in drop(eg. 1.0.0.1)'
        required: true
  

#Source and Destination Envirnoment Details
env:
  #envirnoments
  SOURCE_ENV_NAME: DEV
  SOURCE_ENV_URL: ${{ secrets.E2EDEV }}
  TARGET_ENV_NAME: QA
  TARGET_ENV_URL: ${{ secrets.E2EQA }}
  #service principal 
  APPID: ${{ secrets.APPID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  TENANT_ID: ${{ secrets.TENANT_ID }}
  #soluitons
  CUSTOMIZATION: poc1
  TABLES: poc2


jobs:
  Connection:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    steps:
      #checkout git repo
      - uses: actions/checkout@v2
        with:
          lfs: true
      #check the Service Principal Connection Validation
      - name: Connection-${{env.SOURCE_ENV_NAME}}
        uses: microsoft/powerplatform-actions/who-am-i@v0
        with:
          environment-url: ${{env.SOURCE_ENV_URL}}
          app-id: ${{env.APPID}}
          client-secret: ${{env.CLIENT_SECRET}}
          tenant-id: ${{env.TENANT_ID}}
      - name: Connection-${{env.TARGET_ENV_NAME}}
        uses: microsoft/powerplatform-actions/who-am-i@v0
        with:
          environment-url: ${{env.TARGET_ENV_URL}}
          app-id: ${{env.APPID}}
          client-secret: ${{env.CLIENT_SECRET}}
          tenant-id: ${{env.TENANT_ID}}
  #Export Solutions from Dev Environment
  Export-From-DEV:
    runs-on: windows-latest
    needs: [Connection]
    env:
      RUNNER_DEBUG: 1
    strategy:
      matrix: 
        solution: 
          - poc1
          - poc2
     
    steps:
      - name: Export solution ${{matrix.solution}}
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          environment-url: ${{env.SOURCE_ENV_URL}}
          app-id: ${{env.APPID}}
          client-secret: ${{env.CLIENT_SECRET}}
          tenant-id: ${{env.TENANT_ID}}
          solution-name: ${{matrix.solution}}
          managed: true
          solution-output-file: out/export/${{matrix.solution}}.zip
      - name: Check Solution ${{matrix.solution}}
        uses: microsoft/powerplatform-actions/check-solution@v0
        with:
          environment-url: ${{env.SOURCE_ENV_URL}}
          app-id: ${{env.APPID}}
          client-secret: ${{env.CLIENT_SECRET}}
          tenant-id: ${{env.TENANT_ID}}
          path: out/export/${{matrix.solution}}.zip
      - name: Upload the ready to ship solution to GH artifact store
        uses: actions/upload-artifact@v2
        with:
          name: managedSolutions
          path: out/export/${{matrix.solution}}.zip
  #Import Solutions to QA Envirnoment
  ImportTo-QA:
    needs: [Export-From-DEV]
    runs-on: windows-latest
    steps:
     #checkout git repo
    - uses: actions/checkout@v2
      with:
        lfs: true
    #Import MCSE2EProductivityR1Customization
    - name: Fetch the ready to ship solution ${{env.CUSTOMIZATION}} from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: drop/${{ github.event.inputs.solution_version }}/
    - name: Push the Solutions to Repo
      run: |
            git config --global user.name 'GitHub Workflow'
            git config --global user.email 'githubworkflow@github.com'
            git add .
            git status
            git commit -m "adding solution for build {{ github.event.inputs.solution_name }}"
            git push origin main
    - name: Import ${{env.CUSTOMIZATION}} Solution to ${{env.TARGET_ENV_NAME}} Environment
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.TARGET_ENV_URL}}
        app-id: ${{env.APPID}}
        client-secret: ${{env.CLIENT_SECRET}}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: drop/${{ github.event.inputs.solution_version }}/${{env.CUSTOMIZATION}}.zip
        force-overwrite: true
        publish-changes: true
        run-asynchronously: true
    # Import MCSE2EProductivityR1Tables
    - name: Import ${{env.TABLES}} Solution to ${{env.TARGET_ENV_NAME}} Environment
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.TARGET_ENV_URL}}
        app-id: ${{env.APPID}}
        client-secret: ${{env.CLIENT_SECRET}}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: drop/${{ github.event.inputs.solution_version }}/${{env.TABLES}}.zip
        force-overwrite: true
        publish-changes: true
        run-asynchronously: true
    
